<?xml version="1.0"?>

<configuration>
  <configSections>
    <section name="loginRedirectByRole" type="TreasureLand.LoginRedirectByRoleSection" allowLocation="true" allowDefinition="Everywhere"/>
  </configSections>
  <connectionStrings>
    <clear/>
    <!--LOCALLY MOUNTED CONNECTION STRING
    Use this connection string if you're connected to your local mssql instnace and the database is mounted there
    <add name="TreasureLandDB" connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=Ghana_Hotel;Integrated Security=True" />
    -->

    <!--RUNTIME CONNECTION STRING
    Use this connection string to mount the database to your local mssql instance at runtime (Good for when titan is not up) 
    <add name="TreasureLandDB" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\ghana.mdf;Integrated Security=True;User Instance=True" />
    -->

    <!--TITAN CONNECTION STRING
    Use this connection string when titan is available and the database is mounted there. The username and password is not set becuase the DB is not yet mounted.
    We will update this conneciton string when it is available.    
    -->
    <add name="TreasureLandDB" connectionString="Data Source=titan.cs.weber.edu,10433;Initial Catalog=TreasureLand;Persist Security Info=True;User ID=4790Client;Password=CS4790"
      providerName="System.Data.SqlClient" />

  </connectionStrings>
  <system.web>
    <!-- 2011/10/21 Ryan Diener: This section provides security to the sitemap so that it can present
    pages to users only if the logged in user's group is listed in the sitemapNode's roles attribute. When 
    adding nodes to the sitemap, it is not necessary to add roles if you would like anyone to be able to see
    the link in their map or if you implement your own static menu
    -->
    <siteMap defaultProvider="XmlSiteMapProvider">
      <providers>
        <add name="XmlSiteMapProvider" type="System.Web.XmlSiteMapProvider" siteMapFile="Web.sitemap" securityTrimmingEnabled="true" />
      </providers>
    </siteMap>
    <compilation debug="true" targetFramework="4.0" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login.aspx" timeout="2880" />
    </authentication>
    <membership>
      <providers>
        <clear/>
        <!-- START COMMENT 2011/10/14 Ryan Diener
           Below is the membership provider information.
        END COMMENT 2011/10/14 Ryan Diener-->
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="TreasureLandDB"
             enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false"
             maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10"
             applicationName="/"/>
      </providers>
    </membership>

    <!--2011/10/21 Ryan Diener: This section defines the role provider.-->
    <roleManager enabled="true">
      <providers>
        <clear />
        <add connectionStringName="TreasureLandDB" applicationName="/"
          name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" />
      </providers>
    </roleManager>

    <!--2011/10/21 Ryan Diener: This section defines the profile provider-->
    <profile>
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="TreasureLandDB" applicationName="/"/>
      </providers>
    </profile>

  </system.web>
  <!--2011/10/21 Ryan Diener:
  This section is a custom configuration node which allow us to redirect a user after 
  login to the home page specfied, depending on the role of the user.
  -->
  <loginRedirectByRole>
    <roleRedirects>
      <add role="Admin" url="~/Admin/AdminDefault.aspx" />
      <add role="Maintenance" url="~/Maintenance/Default.aspx" />
      <add role="Clerk" url="~/Clerk/ClerkDefault.aspx"/>
      <!--TO DO: Add the rest of the redirects depending on the user role.-->
    </roleRedirects>
  </loginRedirectByRole>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
</configuration>
